/*
 * Please Note: these classes should be used AS THEY ARE. Think of them as ways to quickly setup layouts.
 * If you need something more customized, start from scratch with a brand new custon class and declare all needed proerties inside it.
 */

/************************************************************************/
/* WRAPPER FOR LARGE SCREENS                                            */
/************************************************************************/
.ht-wrapper {
  width: min(var(--wrapper-width, 80rem), 100% - 2em);
  margin-inline: auto;
}

/************************************************************************/
/* FLEX                                                                 */
/************************************************************************/
.ht-flex {
  display: flex;
  gap: var(--flex-gap, 1em);
}

.ht-flex-justify-center {
  display: flex;
  gap: var(--flex-gap, 1em);
  justify-content: center;
}

.ht-flex-align-center {
  display: flex;
  gap: var(--flex-gap, 1em);
  align-items: center;
}

.ht-flex-center-xy {
  display: flex;
  gap: var(--flex-gap, 1em);
  align-items: center;
  justify-content: center;
}

/************************************************************************/
/* STACK                                                                */
/************************************************************************/
.ht-layout-stack > * + * {
  margin-top: var(--stack-space, 1em);
}

/************************************************************************/
/* GRID                                                                 */
/************************************************************************/
.ht-grid-auto {
  display: grid;
  --_grid-gap: var(--grid-gap, 1rem);
  column-gap: var(--grid-column-gap, var(--_grid-gap));
  row-gap: var(--grid-row-gap, var(--_grid-gap));
  grid-template-columns: repeat(
    var(--grid-placement, auto-fill),
    minmax(var(--grid-min-item-size, 16rem), 1fr)
  );
}

// These classes are meant to center one single child block, DO NOT USE THEM AS STANDARD GRID LAYOUTS
.ht-grid-center-x {
  display: grid;
  justify-items: center;
}

.ht-grid-center-y {
  display: grid;
  align-items: center;
}

.ht-grid-center-xy {
  display: grid;
  place-items: center;
}

/************************************************************************/
/* FORM GROUP                                                           */
/************************************************************************/
// Apply this class whenever you want to activate a form-like layout, with correctly vertically stacked input elements
.ht-formgroup {
  display: grid;
  row-gap: var(--formgroup-gap, 0.2rem); //better stay with rem to correctly compute the error message allocated space

  --_error-font-size: var(--font-size-0);
  --_error-spacing: calc(2 * var(--_error-font-size));

  padding-bottom: var(--_error-spacing);
  position: relative;

  small {
    position: absolute;
    bottom: calc(var(--_error-spacing) / 4);
    left: 0;
    font-size: var(--_error-font-size);
    color: var(--ht-color-red);
    max-height: var(--_error-spacing);
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
    max-width: 100%;
  }
}
